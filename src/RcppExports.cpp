// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mlestimate
List mlestimate(NumericVector D, NumericVector x0, NumericMatrix ref, IntegerVector Itmax, NumericVector Tol);
RcppExport SEXP _DeepSig_mlestimate(SEXP DSEXP, SEXP x0SEXP, SEXP refSEXP, SEXP ItmaxSEXP, SEXP TolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type D(DSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x0(x0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type ref(refSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type Itmax(ItmaxSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Tol(TolSEXP);
    rcpp_result_gen = Rcpp::wrap(mlestimate(D, x0, ref, Itmax, Tol));
    return rcpp_result_gen;
END_RCPP
}
// vbnmf_update
Rcpp::List vbnmf_update(const Eigen::MatrixXd& X, const Rcpp::List& wh, const Rcpp::List& hyper, const Rcpp::NumericVector& fudge);
RcppExport SEXP _DeepSig_vbnmf_update(SEXP XSEXP, SEXP whSEXP, SEXP hyperSEXP, SEXP fudgeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type wh(whSEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type hyper(hyperSEXP);
    Rcpp::traits::input_parameter< const Rcpp::NumericVector& >::type fudge(fudgeSEXP);
    rcpp_result_gen = Rcpp::wrap(vbnmf_update(X, wh, hyper, fudge));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DeepSig_mlestimate", (DL_FUNC) &_DeepSig_mlestimate, 5},
    {"_DeepSig_vbnmf_update", (DL_FUNC) &_DeepSig_vbnmf_update, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DeepSig(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
